"""add_job_models

Revision ID: 2a8e5ec6b23b
Revises: 7d8d48672b3e
Create Date: 2025-08-05 22:40:28.570549

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2a8e5ec6b23b'
down_revision = '7d8d48672b3e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create job_post_types table
    op.create_table('job_post_types',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('name', sa.VARCHAR(length=255), nullable=False),
        sa.Column('description', sa.TEXT(), nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
        sa.Column('is_deleted', sa.BOOLEAN(), nullable=True),
        sa.PrimaryKeyConstraint('id', name=op.f('job_post_types_pkey'))
    )
    op.create_index(op.f('ix_job_post_types_id'), 'job_post_types', ['id'], unique=False)
    
    # Create jobs table
    op.create_table('jobs',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('title', sa.VARCHAR(length=255), nullable=False),
        sa.Column('description', sa.TEXT(), nullable=True),
        sa.Column('user_id', sa.INTEGER(), nullable=False),
        sa.Column('job_post_type_id', sa.INTEGER(), nullable=False),
        sa.Column('location_id', sa.INTEGER(), nullable=True),
        sa.Column('experience_level', sa.VARCHAR(length=100), nullable=True),
        sa.Column('work_mode', sa.VARCHAR(length=100), nullable=True),
        sa.Column('job_type', sa.VARCHAR(length=100), nullable=True),
        sa.Column('salary_min', sa.FLOAT(), nullable=True),
        sa.Column('salary_max', sa.FLOAT(), nullable=True),
        sa.Column('deadline', sa.VARCHAR(length=100), nullable=True),
        sa.Column('attachments', sa.TEXT(), nullable=True),
        sa.Column('is_active', sa.BOOLEAN(), nullable=True),
        sa.Column('is_deleted', sa.BOOLEAN(), nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(['job_post_type_id'], ['job_post_types.id'], name=op.f('jobs_job_post_type_id_fkey')),
        sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('jobs_location_id_fkey')),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('jobs_user_id_fkey')),
        sa.PrimaryKeyConstraint('id', name=op.f('jobs_pkey'))
    )
    op.create_index(op.f('ix_jobs_id'), 'jobs', ['id'], unique=False)
    
    # Create job_skills table
    op.create_table('job_skills',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('job_id', sa.INTEGER(), nullable=False),
        sa.Column('skill_id', sa.INTEGER(), nullable=False),
        sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('job_skills_job_id_fkey')),
        sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], name=op.f('job_skills_skill_id_fkey')),
        sa.PrimaryKeyConstraint('id', name=op.f('job_skills_pkey'))
    )
    op.create_index(op.f('ix_job_skills_id'), 'job_skills', ['id'], unique=False)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_job_skills_id'), table_name='job_skills')
    op.drop_table('job_skills')
    op.drop_index(op.f('ix_jobs_id'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_job_post_types_id'), table_name='job_post_types')
    op.drop_table('job_post_types')
    # ### end Alembic commands ### 